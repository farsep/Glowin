stages:
  - build
  - deploy

services:
  - docker:dind

generate_version:
  stage: build
  image: docker:latest
  before_script:
    - docker info || { echo "Docker is not running, it's necessary to verify"; exit 1; }
    - docker-compose --version || { echo "Docker Compose is not installed"; exit 1; }
  script:
    - export VERSION=$(git describe --tags --always --dirty)
    - echo "Generated version "$VERSION
    - echo $VERSION > VERSION
  artifacts:
    paths:
      - VERSION
  only:
    - main
    - merge_requests

build:
  stage: deploy
  image: docker:latest
  needs: ["generate_version"]
  dependencies:
    - generate_version
  script:
    - export VERSION=$(cat VERSION)
    - docker build \
      --build-arg "SPRING_MAIL_HOST=${SPRING_MAIL_HOST}" \
      --build-arg "SPRING_MAIL_PORT=${SPRING_MAIL_PORT}" \
      ... # (other build args) ...
      -t "gravel3497/glowin:${VERSION}" \
      -t "gravel3497/glowin:latest" \
      .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push gravel3497/glowin:$VERSION
    - docker push gravel3497/glowin:latest
  only:
    - main
    - merge_requests
